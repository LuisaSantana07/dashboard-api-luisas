{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luisa\\\\Downloads\\\\Prueba Tecnica 2\\\\dashboards_api_luisas\\\\src\\\\components\\\\Panels.jsx\",\n  _s = $RefreshSig$();\n// src/components/Panels.jsx\nimport React, { useState } from 'react';\nimport { panels, projects } from '../data/mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Panels = () => {\n  _s();\n  const [selectedProjectId, setSelectedProjectId] = useState('');\n  const [search, setSearch] = useState('');\n  const filteredPanels = panels.filter(panel => (!selectedProjectId || panel.projectId === parseInt(selectedProjectId)) && panel.name.toLowerCase().includes(search.toLowerCase())).sort((a, b) => a.name.localeCompare(b.name));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overview-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCCA Paneles creados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overview-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-base\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"projectFilter\",\n          children: \"\\uD83D\\uDD0E Filtrar por proyecto:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"projectFilter\",\n          value: selectedProjectId,\n          onChange: e => setSelectedProjectId(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todos los proyectos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: project.id,\n            children: project.name\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Buscar panel...\",\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total encontrados: \", filteredPanels.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), filteredPanels.map(panel => {\n        var _panel$updatedAt;\n        const project = projects.find(p => p.id === panel.projectId);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-base\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: panel.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Proyecto:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 18\n            }, this), \" \", (project === null || project === void 0 ? void 0 : project.name) || 'Sin proyecto']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: panel.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Creado:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 18\n            }, this), \" \", panel.createdAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\xDAltima modificaci\\xF3n:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 18\n            }, this), \" \", (_panel$updatedAt = panel.updatedAt) !== null && _panel$updatedAt !== void 0 ? _panel$updatedAt : 'No registra']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Autor:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 18\n            }, this), \" \", panel.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), panel.preview && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: panel.preview,\n            alt: `Vista previa de ${panel.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, panel.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Panels, \"gRiN9ZrGnDXcdCi4O/jXVnATbKo=\");\n_c = Panels;\nexport default Panels;\nvar _c;\n$RefreshReg$(_c, \"Panels\");","map":{"version":3,"names":["React","useState","panels","projects","jsxDEV","_jsxDEV","Panels","_s","selectedProjectId","setSelectedProjectId","search","setSearch","filteredPanels","filter","panel","projectId","parseInt","name","toLowerCase","includes","sort","a","b","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","project","type","placeholder","length","_panel$updatedAt","find","p","description","createdAt","updatedAt","author","preview","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/luisa/Downloads/Prueba Tecnica 2/dashboards_api_luisas/src/components/Panels.jsx"],"sourcesContent":["// src/components/Panels.jsx\r\nimport React, { useState } from 'react';\r\nimport { panels, projects } from '../data/mockData';\r\n\r\nconst Panels = () => {\r\n  const [selectedProjectId, setSelectedProjectId] = useState('');\r\n  const [search, setSearch] = useState('');\r\n\r\n  const filteredPanels = panels\r\n    .filter(panel =>\r\n      (!selectedProjectId || panel.projectId === parseInt(selectedProjectId)) &&\r\n      panel.name.toLowerCase().includes(search.toLowerCase())\r\n    )\r\n    .sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n  return (\r\n    <div className=\"overview-container\">\r\n      <h3>ðŸ“Š Paneles creados</h3>\r\n\r\n      <div className=\"overview-grid\">\r\n        <div className=\"card-base\">\r\n          <label htmlFor=\"projectFilter\">ðŸ”Ž Filtrar por proyecto:</label>\r\n          <select\r\n            id=\"projectFilter\"\r\n            value={selectedProjectId}\r\n            onChange={(e) => setSelectedProjectId(e.target.value)}\r\n          >\r\n            <option value=\"\">Todos los proyectos</option>\r\n            {projects.map((project) => (\r\n              <option key={project.id} value={project.id}>\r\n                {project.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Buscar panel...\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"search-input\"\r\n          />\r\n          <p>Total encontrados: {filteredPanels.length}</p>\r\n        </div>\r\n\r\n        {filteredPanels.map((panel) => {\r\n          const project = projects.find(p => p.id === panel.projectId);\r\n\r\n          return (\r\n            <div key={panel.id} className=\"card-base\">\r\n              <h4>{panel.name}</h4>\r\n              <p><strong>Proyecto:</strong> {project?.name || 'Sin proyecto'}</p>\r\n              <p>{panel.description}</p>\r\n              <p><strong>Creado:</strong> {panel.createdAt}</p>\r\n              <p><strong>Ãšltima modificaciÃ³n:</strong> {panel.updatedAt ?? 'No registra'}</p>\r\n              <p><strong>Autor:</strong> {panel.author}</p>\r\n              {panel.preview && (\r\n                <img src={panel.preview} alt={`Vista previa de ${panel.name}`} />\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Panels;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}