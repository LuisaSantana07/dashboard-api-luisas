{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luisa\\\\Downloads\\\\Prueba Tecnica 2\\\\dashboards_api_luisas\\\\src\\\\components\\\\Panels.jsx\";\n// src/components/Panels.jsx\nimport React from 'react';\nimport { panels } from '../data/mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Panels = ({\n  projectId\n}) => {\n  const filteredPanels = projectId ? panels.filter(p => p.projectId === projectId) : panels;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-base\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83D\\uDCCA Paneles creados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), filteredPanels.map(panel => {\n      var _panel$updatedAt;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: panel.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: panel.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Creado: \", panel.createdAt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xDAltima modificaci\\xF3n: \", (_panel$updatedAt = panel.updatedAt) !== null && _panel$updatedAt !== void 0 ? _panel$updatedAt : 'No registra']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Autor: \", panel.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, panel.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Panels;\nexport default Panels;\nvar _c;\n$RefreshReg$(_c, \"Panels\");","map":{"version":3,"names":["React","panels","jsxDEV","_jsxDEV","Panels","projectId","filteredPanels","filter","p","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","panel","_panel$updatedAt","name","description","createdAt","updatedAt","author","id","_c","$RefreshReg$"],"sources":["C:/Users/luisa/Downloads/Prueba Tecnica 2/dashboards_api_luisas/src/components/Panels.jsx"],"sourcesContent":["// src/components/Panels.jsx\r\nimport React from 'react';\r\nimport { panels } from '../data/mockData';\r\n\r\nconst Panels = ({ projectId }) => {\r\n  const filteredPanels = projectId\r\n    ? panels.filter(p => p.projectId === projectId)\r\n    : panels;\r\n\r\n  return (\r\n    <div className=\"card-base\">\r\n      <h3>ðŸ“Š Paneles creados</h3>\r\n      {filteredPanels.map(panel => (\r\n        <div key={panel.id}>\r\n          <p><strong>{panel.name}</strong></p>\r\n          <p>{panel.description}</p>\r\n          <p>Creado: {panel.createdAt}</p>\r\n          <p>Ãšltima modificaciÃ³n: {panel.updatedAt ?? 'No registra'}</p>\r\n          <p>Autor: {panel.author}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Panels;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAChC,MAAMC,cAAc,GAAGD,SAAS,GAC5BJ,MAAM,CAACM,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACH,SAAS,KAAKA,SAAS,CAAC,GAC7CJ,MAAM;EAEV,oBACEE,OAAA;IAAKM,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBP,OAAA;MAAAO,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BR,cAAc,CAACS,GAAG,CAACC,KAAK;MAAA,IAAAC,gBAAA;MAAA,oBACvBd,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAAO,QAAA,eAAGP,OAAA;YAAAO,QAAA,EAASM,KAAK,CAACE;UAAI;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpCX,OAAA;UAAAO,QAAA,EAAIM,KAAK,CAACG;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BX,OAAA;UAAAO,QAAA,GAAG,UAAQ,EAACM,KAAK,CAACI,SAAS;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCX,OAAA;UAAAO,QAAA,GAAG,6BAAqB,GAAAO,gBAAA,GAACD,KAAK,CAACK,SAAS,cAAAJ,gBAAA,cAAAA,gBAAA,GAAI,aAAa;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9DX,OAAA;UAAAO,QAAA,GAAG,SAAO,EAACM,KAAK,CAACM,MAAM;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GALpBE,KAAK,CAACO,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CAAC;IAAA,CACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACU,EAAA,GAnBIpB,MAAM;AAqBZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}